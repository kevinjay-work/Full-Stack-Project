{"ast":null,"code":"import _defineProperty from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Cloudtek/fullStackProj/front-end/src/Component/Signup/Signup.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Col, FormGroup, FormControl } from \"react-bootstrap\";\nimport { withFormik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { auth } from '../Login/Auth';\nimport { Redirect } from \"react-router-dom\";\nimport './login.css';\nimport Loader from \"react-loader-spinner\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select';\nvar options = [{\n  value: 'player',\n  label: 'Player'\n}, {\n  value: 'ops member',\n  label: 'OPS Member'\n}];\n\nvar SignUpPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUpPage, _Component);\n\n  function SignUpPage(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpPage).call(this, props));\n\n    _this.OnSubmit = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          selectedRole = _this$state.selectedRole; //  this.setState({ error: '', isSubmitting: true, selectedRole: null })\n\n      var role = selectedRole.value;\n      console.log('hhhhhhhhhhhhhhhhhh', email, password, selectedRole.value);\n      auth.singnup(email, password, role).then(function (response, err) {\n        console.log('IN APIIIIII');\n        fetch('http://localhost:3001/users/signup', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Access-Control-Allow-Origin': 'http://localhost:3001',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: \"\".concat(email),\n            password: \"\".concat(password),\n            userRole: \"\".concat(role)\n          })\n        }).then(function (response) {\n          console.log('in RESPONSE');\n\n          if (response.message === false) {\n            alert('This Email is already registered');\n          } else {\n            alert('You registeted successfully');\n          }\n        }).catch(function (err) {\n          //alert('This email is already registered!!');\n          console.log('ERRRRROOOORRR', err);\n        }).done();\n        console.log('response', response);\n\n        if (response === true) {\n          _this.setState({\n            isSubmitting: false\n          }); // return <Redirect\n          //   to={{\n          //     pathname: '/admin',\n          //     state: User\n          //   }}\n          // />\n\n        }\n      }).catch(function (error) {\n        _this.setState({\n          isSubmitting: false\n        });\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleRoleChange = function (selectedRole) {\n      _this.setState({\n        selectedRole: selectedRole\n      });\n\n      console.log(\"Option selected:\", selectedRole);\n    };\n\n    _this.state = {\n      error: '',\n      email: '',\n      password: '',\n      isSubmitting: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUpPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error,\n          isSubmitting = _this$state2.isSubmitting,\n          selectedRole = _this$state2.selectedRole;\n\n      if (auth.loggedIn()) {\n        var User = {\n          name: 'wakeel',\n          role: 'player'\n        };\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/admin',\n            state: User\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }); // return <Redirect to=\"/admin\" />\n      }\n\n      return isSubmitting ? React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"black\",\n        height: \"100\",\n        width: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form\",\n        id: \"front-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.OnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, error && error), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(FormControl, {\n        placeholder: \"Enter email\",\n        name: \"email\",\n        value: email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Password\"), React.createElement(FormControl, {\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Select Role\"), React.createElement(Select, {\n        value: selectedRole,\n        onChange: this.handleRoleChange,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: email === '' || password === '',\n        className: \"submit-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Or\"), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Login\")))))));\n    }\n  }]);\n\n  return SignUpPage;\n}(Component);\n\nvar FormikApp = withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  handleSubmit: function handleSubmit(_ref, _ref2) {\n    var email = _ref.email,\n        password = _ref.password;\n    var props = _ref2.props,\n        resetForm = _ref2.resetForm,\n        setErrors = _ref2.setErrors,\n        setSubmitting = _ref2.setSubmitting;\n    setSubmitting(true);\n    auth.login(email, password).then(function (res) {\n      setSubmitting(false);\n    }).catch(function (err) {\n      console.log(\"TODO: handle error: \", err);\n      setErrors({\n        error: \"Request Cannot be processed\"\n      });\n      setSubmitting(false);\n    });\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(),\n    password: Yup.string().required()\n  })\n})(SignUpPage);\nexport default FormikApp;","map":{"version":3,"sources":["/home/dev/Cloudtek/fullStackProj/front-end/src/Component/Signup/Signup.jsx"],"names":["React","Component","Grid","Col","FormGroup","FormControl","withFormik","Form","Yup","auth","Redirect","Loader","Link","Select","options","value","label","SignUpPage","props","OnSubmit","state","email","password","selectedRole","role","console","log","singnup","then","response","err","fetch","method","headers","body","JSON","stringify","userRole","message","alert","catch","done","setState","isSubmitting","error","handleChange","e","target","name","handleRoleChange","loggedIn","User","pathname","FormikApp","mapPropsToValues","handleSubmit","resetForm","setErrors","setSubmitting","login","res","validationSchema","object","shape","string","required"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,iBALP;AAMA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,QAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFc,CAAhB;;IAOMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAUnBC,QAVmB,GAUR,YAAM;AAAA,wBAC2B,MAAKC,KADhC;AAAA,UACPC,KADO,eACPA,KADO;AAAA,UACAC,QADA,eACAA,QADA;AAAA,UACUC,YADV,eACUA,YADV,EAEf;;AACA,UAAMC,IAAI,GAAGD,YAAY,CAACR,KAA1B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,KAAlC,EAAyCC,QAAzC,EAAmDC,YAAY,CAACR,KAAhE;AACAN,MAAAA,IAAI,CAACkB,OAAL,CAAaN,KAAb,EAAoBC,QAApB,EAA8BE,IAA9B,EAAoCI,IAApC,CAAyC,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAC1DL,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEAK,QAAAA,KAAK,CAAC,oCAAD,EAAsC;AACjCC,UAAAA,MAAM,EAAE,MADyB;AAEjCC,UAAAA,OAAO,EAAE;AACL,sBAAW,kBADN;AAEL,2CAA8B,uBAFzB;AAGL,4BAAiB;AAHZ,WAFwB;AAOjCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBf,YAAAA,KAAK,YAAKA,KAAL,CADY;AAEjBC,YAAAA,QAAQ,YAAKA,QAAL,CAFS;AAGjBe,YAAAA,QAAQ,YAAKb,IAAL;AAHS,WAAf;AAP2B,SAAtC,CAAL,CAaOI,IAbP,CAaY,UAAAC,QAAQ,EAAI;AAChBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACE,cAAGG,QAAQ,CAACS,OAAT,KAAqB,KAAxB,EAA8B;AAC1BC,YAAAA,KAAK,CAAC,kCAAD,CAAL;AACH,WAFD,MAEK;AACDA,YAAAA,KAAK,CAAC,6BAAD,CAAL;AACH;AACJ,SApBP,EAoBSC,KApBT,CAoBe,UAACV,GAAD,EAAS;AACd;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BI,GAA5B;AAAiC,SAtB3C,EAuBWW,IAvBX;AAyBAhB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB;;AACA,YAAIA,QAAQ,KAAK,IAAjB,EAAuB;AAErB,gBAAKa,QAAL,CAAc;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAd,EAFqB,CAKrB;AACA;AACA;AACA;AACA;AAEA;;AAED;AAEF,OA5CD,EA6CGH,KA7CH,CA6CS,UAAAI,KAAK,EAAI;AACd,cAAKF,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD,OA/CH;AAgDD,KA/DkB;;AAAA,UAkEnBE,YAlEmB,GAkEJ,UAACC,CAAD,EAAO;AACpB,YAAKJ,QAAL,qBAAiBI,CAAC,CAACC,MAAF,CAASC,IAA1B,EAAiCF,CAAC,CAACC,MAAF,CAAShC,KAA1C;AACD,KApEkB;;AAAA,UAqEnBkC,gBArEmB,GAqEA,UAAA1B,YAAY,EAAI;AACjC,YAAKmB,QAAL,CAAc;AAAEnB,QAAAA,YAAY,EAAZA;AAAF,OAAd;;AACAE,MAAAA,OAAO,CAACC,GAAR,qBAAgCH,YAAhC;AACD,KAxEkB;;AAEjB,UAAKH,KAAL,GAAa;AACXwB,MAAAA,KAAK,EAAE,EADI;AAEXvB,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXqB,MAAAA,YAAY,EAAE;AAJH,KAAb;AAFiB;AAQlB;;;;6BAiEQ;AAAA,yBACwD,KAAKvB,KAD7D;AAAA,UACCC,KADD,gBACCA,KADD;AAAA,UACQC,QADR,gBACQA,QADR;AAAA,UACkBsB,KADlB,gBACkBA,KADlB;AAAA,UACyBD,YADzB,gBACyBA,YADzB;AAAA,UACuCpB,YADvC,gBACuCA,YADvC;;AAEP,UAAId,IAAI,CAACyC,QAAL,EAAJ,EAAqB;AACnB,YAAMC,IAAI,GAAG;AACXH,UAAAA,IAAI,EAAE,QADK;AAEXxB,UAAAA,IAAI,EAAE;AAFK,SAAb;AAIA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACnB4B,YAAAA,QAAQ,EAAE,QADS;AAEnBhC,YAAAA,KAAK,EAAE+B;AAFY,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CALmB,CASnB;AACD;;AACD,aAAOR,YAAY,GACjB;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAyB,QAAA,KAAK,EAAC,OAA/B;AAAuC,QAAA,MAAM,EAAC,KAA9C;AAAoD,QAAA,KAAK,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADiB,GAKf;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKxB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyByB,KAAK,IAAIA,KAAlC,CADH,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAC,aAAzB;AACE,QAAA,IAAI,EAAC,OADP;AAGE,QAAA,KAAK,EAAEvB,KAHT;AAIE,QAAA,QAAQ,EAAE,KAAKwB,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAFF,CAHF,EAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAEvB,QAJT;AAKE,QAAA,QAAQ,EAAE,KAAKuB,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAFF,CAhBF,EA+BE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEtB,YADT;AAEE,QAAA,QAAQ,EAAE,KAAK0B,gBAFjB;AAGE,QAAA,OAAO,EAAEnC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAFF,CA/BF,CADF,EA8CE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEO,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAA7D;AAAiE,QAAA,SAAS,EAAC,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CA9CF,CADF,CADF,CAFF,CADF,CALJ;AA4ED;;;;EAnKsBrB,S;;AAsKzB,IAAMoD,SAAS,GAAG/C,UAAU,CAAC;AAC3BgD,EAAAA,gBAD2B,4BACVpC,KADU,EACH;AAEtB,WAAO;AACLG,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAP0B;AAQ3BiC,EAAAA,YAR2B,qCAQuD;AAAA,QAAnElC,KAAmE,QAAnEA,KAAmE;AAAA,QAA5DC,QAA4D,QAA5DA,QAA4D;AAAA,QAA9CJ,KAA8C,SAA9CA,KAA8C;AAAA,QAAvCsC,SAAuC,SAAvCA,SAAuC;AAAA,QAA5BC,SAA4B,SAA5BA,SAA4B;AAAA,QAAjBC,aAAiB,SAAjBA,aAAiB;AAChFA,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAjD,IAAAA,IAAI,CAACkD,KAAL,CAAWtC,KAAX,EAAkBC,QAAlB,EAA4BM,IAA5B,CAAiC,UAAAgC,GAAG,EAAI;AACtCF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFD,EAEGlB,KAFH,CAES,UAAAV,GAAG,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,yBAAoCI,GAApC;AACA2B,MAAAA,SAAS,CAAC;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAT;AAEAc,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAPD;AAQD,GAlB0B;AAmB3BG,EAAAA,gBAAgB,EAAErD,GAAG,CAACsD,MAAJ,GAAaC,KAAb,CAAmB;AACnC1C,IAAAA,KAAK,EAAEb,GAAG,CAACwD,MAAJ,GAAa3C,KAAb,GAAqB4C,QAArB,EAD4B;AAEnC3C,IAAAA,QAAQ,EAAEd,GAAG,CAACwD,MAAJ,GAAaC,QAAb;AAFyB,GAAnB;AAnBS,CAAD,CAAV,CAuBfhD,UAvBe,CAAlB;AA2BA,eAAeoC,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Col,\n  FormGroup,\n  FormControl\n} from \"react-bootstrap\";\nimport { withFormik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { auth } from '../Login/Auth';\nimport { Redirect } from \"react-router-dom\";\nimport './login.css'\nimport Loader from \"react-loader-spinner\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select';\n\nconst options = [\n  { value: 'player', label: 'Player' },\n  { value: 'ops member', label: 'OPS Member' },\n];\n\n\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n      email: '',\n      password: '',\n      isSubmitting: false\n    };\n  }\n\n  OnSubmit = () => {\n    const { email, password, selectedRole } = this.state\n    //  this.setState({ error: '', isSubmitting: true, selectedRole: null })\n    const role = selectedRole.value;\n    console.log('hhhhhhhhhhhhhhhhhh', email, password, selectedRole.value)\n    auth.singnup(email, password, role).then((response, err) => {\n      console.log('IN APIIIIII');\n\n      fetch('http://localhost:3001/users/signup',{\n                method: 'POST',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Access-Control-Allow-Origin':'http://localhost:3001',\n                    'Content-Type' : 'application/json',\n                },\n                body: JSON.stringify({\n                    email: `${email}`,\n                    password: `${password}`,\n                    userRole: `${role}`\n                })\n            })\n            .then(response => {\n              console.log('in RESPONSE')\n                if(response.message === false){\n                    alert('This Email is already registered');\n                }else{\n                    alert('You registeted successfully');  \n                }\n            }).catch((err) => {\n                //alert('This email is already registered!!');\n                console.log('ERRRRROOOORRR',err)})\n                .done();\n\n      console.log('response', response);\n      if (response === true) {\n\n        this.setState({ isSubmitting: false });\n\n\n        // return <Redirect\n        //   to={{\n        //     pathname: '/admin',\n        //     state: User\n        //   }}\n\n        // />\n\n      }\n\n    })\n      .catch(error => {\n        this.setState({ isSubmitting: false });\n      });\n  }\n\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  handleRoleChange = selectedRole => {\n    this.setState({ selectedRole });\n    console.log(`Option selected:`, selectedRole);\n  };\n  render() {\n    const { email, password, error, isSubmitting, selectedRole } = this.state;\n    if (auth.loggedIn()) {\n      const User = {\n        name: 'wakeel',\n        role: 'player'\n      }\n      return <Redirect to={{\n        pathname: '/admin',\n        state: User\n      }} />\n      // return <Redirect to=\"/admin\" />\n    }\n    return isSubmitting ? (\n      <div className=\"loader\" >\n        <Loader type=\"ThreeDots\" color=\"black\" height=\"100\" width=\"100\" />\n      </div >\n    ) : (\n        <div className=\"container\">\n          <div className=\"form\" id=\"front-form\">\n\n            <Grid>\n              <Col>\n                <Form onSubmit={this.OnSubmit}>\n                  <div>\n                    {<small className=\"text\">{error && error}</small>}\n\n                    <FormGroup\n                    >\n                      <div className=\"field\">\n\n                        <label>Email address</label>\n                        <FormControl placeholder=\"Enter email\"\n                          name=\"email\"\n\n                          value={email}\n                          onChange={this.handleChange} />\n                      </div>\n                    </FormGroup>\n\n                    <FormGroup\n                    >\n                      <div className=\"field\">\n\n                        <label>Password</label>\n                        <FormControl\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          type=\"password\"\n                          value={password}\n                          onChange={this.handleChange}\n\n                        />\n                      </div>\n                    </FormGroup>\n                    <FormGroup\n                    >\n                      <div className=\"field\">\n\n                        <label>Select Role</label>\n                        <Select\n                          value={selectedRole}\n                          onChange={this.handleRoleChange}\n                          options={options}\n                        />\n                      </div>\n                    </FormGroup>\n\n                  </div>\n                  <div className=\"form-note\">\n                    <button type=\"submit\" disabled={email === '' || password === ''} className=\"submit-btn\">Sign Up</button>\n                    <span>Or</span>\n                    <Link to=\"/\">\n                      Login\n                                                        </Link>\n                  </div>\n\n\n\n\n                </Form>\n              </Col>\n            </Grid>\n          </div>\n        </div>\n\n      )\n\n\n  }\n}\n\nconst FormikApp = withFormik({\n  mapPropsToValues(props) {\n\n    return {\n      email: '',\n      password: ''\n    }\n  },\n  handleSubmit({ email, password }, { props, resetForm, setErrors, setSubmitting }) {\n    setSubmitting(true)\n    auth.login(email, password).then(res => {\n      setSubmitting(false)\n    }).catch(err => {\n      console.log(`TODO: handle error: `, err)\n      setErrors({ error: \"Request Cannot be processed\" })\n\n      setSubmitting(false)\n    })\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(),\n    password: Yup.string().required()\n  })\n})(SignUpPage)\n\n\n\nexport default FormikApp;\n"]},"metadata":{},"sourceType":"module"}