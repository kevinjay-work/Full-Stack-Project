{"ast":null,"code":"import { API } from \"../../api/index\";\nvar localStorage = global.window.localStorage; // const baseURL = `http://secondlook-life-1969196284.us-east-1.elb.amazonaws.com`;\n\nexport var auth = {\n  login: function login(email, password) {\n    if (auth.loggedIn()) {\n      return Promise.resolve(true);\n    }\n\n    console.log(email, password); // return fetch(`${baseURL}/api/tracking-keys/${trackerKey}`, options)\n\n    return API._login({\n      email: email,\n      password: password\n    }).then(function (response, err) {\n      //store user details in local storage\n      console.log('ttttttttttttttttttttttttttttttttttttttttt', response);\n      localStorage.token = response.token;\n\n      if (response.message === 'user not found') {\n        return Promise.resolve(false);\n      }\n\n      return Promise.resolve(true);\n    }).catch(function (err) {\n      // console.log(err)\n      //localStorage.token = 'this is token';\n      return Promise.resolve(false); // return Promise.reject(false);\n    });\n  },\n  singnup: function singnup(email, password, selectedRole) {\n    var data = {\n      email: email,\n      password: password,\n      selectedRole: selectedRole\n    };\n    console.log(email, password, selectedRole); // return fetch(`${baseURL}/api/tracking-keys/${trackerKey}`, options)\n\n    return API._signup({\n      email: email,\n      password: password,\n      selectedRole: selectedRole\n    }).then(function (response, err) {\n      //store user details in local storage\n      console.log(response);\n      localStorage.token = response.token;\n      return Promise.resolve(true);\n    }).catch(function (err) {\n      // console.log(err)\n      localStorage.token = 'this is token';\n      return Promise.resolve(true); // return Promise.reject(false);\n    });\n  },\n  loggedIn: function loggedIn() {\n    return !!localStorage.token;\n  },\n  logout: function logout(history) {\n    localStorage.clear();\n    history.push('/login');\n  }\n};","map":{"version":3,"sources":["/home/dev/Cloudtek/fullStackProj/front-end/src/Component/Login/Auth.js"],"names":["API","localStorage","global","window","auth","login","email","password","loggedIn","Promise","resolve","console","log","_login","then","response","err","token","message","catch","singnup","selectedRole","data","_signup","logout","history","clear","push"],"mappings":"AAAA,SACIA,GADJ,QAEO,iBAFP;AAGA,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcF,YAAnC,C,CACA;;AAEA,OAAO,IAAMG,IAAI,GAAG;AAEhBC,EAAAA,KAFgB,iBAEVC,KAFU,EAEHC,QAFG,EAEO;AAEnB,QAAIH,IAAI,CAACI,QAAL,EAAJ,EAAqB;AACjB,aAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBC,QAAnB,EALmB,CAMnB;;AACA,WAAOP,GAAG,CAACa,MAAJ,CAAW;AACdP,MAAAA,KAAK,EAALA,KADc;AAEdC,MAAAA,QAAQ,EAARA;AAFc,KAAX,EAGJO,IAHI,CAGC,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAAE;AACzBL,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAwDG,QAAxD;AACAd,MAAAA,YAAY,CAACgB,KAAb,GAAqBF,QAAQ,CAACE,KAA9B;;AACA,UAAGF,QAAQ,CAACG,OAAT,KAAqB,gBAAxB,EAAyC;AACrC,eAAOT,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACH;;AACD,aAAOD,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH,KAVM,EAUJS,KAVI,CAUE,UAAAH,GAAG,EAAI;AACZ;AACA;AAEA,aAAOP,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP,CAJY,CAMZ;AACH,KAjBM,CAAP;AAkBH,GA3Be;AA4BhBU,EAAAA,OA5BgB,mBA4BRd,KA5BQ,EA4BDC,QA5BC,EA4BSc,YA5BT,EA4BuB;AAEnC,QAAIC,IAAI,GAAG;AACPhB,MAAAA,KAAK,EAALA,KADO;AAEPC,MAAAA,QAAQ,EAARA,QAFO;AAGPc,MAAAA,YAAY,EAAZA;AAHO,KAAX;AAKAV,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EACIC,QADJ,EAEIc,YAFJ,EAPmC,CAUnC;;AACA,WAAOrB,GAAG,CAACuB,OAAJ,CAAY;AACfjB,MAAAA,KAAK,EAALA,KADe;AAEfC,MAAAA,QAAQ,EAARA,QAFe;AAGfc,MAAAA,YAAY,EAAZA;AAHe,KAAZ,EAIJP,IAJI,CAIC,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAAE;AACzBL,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAd,MAAAA,YAAY,CAACgB,KAAb,GAAqBF,QAAQ,CAACE,KAA9B;AAEA,aAAOR,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH,KATM,EASJS,KATI,CASE,UAAAH,GAAG,EAAI;AACZ;AACAf,MAAAA,YAAY,CAACgB,KAAb,GAAqB,eAArB;AAEA,aAAOR,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP,CAJY,CAMZ;AACH,KAhBM,CAAP;AAiBH,GAxDe;AAyDhBF,EAAAA,QAzDgB,sBAyDL;AACP,WAAO,CAAC,CAACP,YAAY,CAACgB,KAAtB;AACH,GA3De;AA6DhBO,EAAAA,MA7DgB,kBA6DTC,OA7DS,EA6DA;AAEZxB,IAAAA,YAAY,CAACyB,KAAb;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,QAAb;AAEH;AAlEe,CAAb","sourcesContent":["import {\n    API\n} from \"../../api/index\";\nconst localStorage = global.window.localStorage;\n// const baseURL = `http://secondlook-life-1969196284.us-east-1.elb.amazonaws.com`;\n\nexport const auth = {\n\n    login(email, password) {\n\n        if (auth.loggedIn()) {\n            return Promise.resolve(true);\n        }\n        console.log(email, password)\n        // return fetch(`${baseURL}/api/tracking-keys/${trackerKey}`, options)\n        return API._login({\n            email,\n            password\n        }).then((response, err) => { //store user details in local storage\n            console.log('ttttttttttttttttttttttttttttttttttttttttt',response)\n            localStorage.token = response.token;\n            if(response.message === 'user not found'){\n                return Promise.resolve(false);\n            }\n            return Promise.resolve(true);\n        }).catch(err => {\n            // console.log(err)\n            //localStorage.token = 'this is token';\n\n            return Promise.resolve(false);\n\n            // return Promise.reject(false);\n        })\n    },\n    singnup(email, password, selectedRole) {\n\n        let data = {\n            email,\n            password,\n            selectedRole\n        }\n        console.log(email,\n            password,\n            selectedRole)\n        // return fetch(`${baseURL}/api/tracking-keys/${trackerKey}`, options)\n        return API._signup({\n            email,\n            password,\n            selectedRole\n        }).then((response, err) => { //store user details in local storage\n            console.log(response)\n            localStorage.token = response.token;\n\n            return Promise.resolve(true);\n        }).catch(err => {\n            // console.log(err)\n            localStorage.token = 'this is token';\n\n            return Promise.resolve(true);\n\n            // return Promise.reject(false);\n        })\n    },\n    loggedIn() {\n        return !!localStorage.token;\n    },\n\n    logout(history) {\n\n        localStorage.clear();\n        history.push('/login');\n\n    },\n\n};"]},"metadata":{},"sourceType":"module"}