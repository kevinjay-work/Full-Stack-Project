{"ast":null,"code":"import _toConsumableArray from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Cloudtek/fullStackProj/front-end/src/Component/AdminModules/AddModalities/AddModalities.js\";\nimport React, { Component } from \"react\";\nimport \"./AddModalities.css\";\nimport { API } from \"../../../api/index\";\nimport { Formik } from \"formik\";\nimport Loader from \"react-loader-spinner\";\n\nvar ADDMODALITIES =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ADDMODALITIES, _Component);\n\n  function ADDMODALITIES() {\n    var _this;\n\n    _classCallCheck(this, ADDMODALITIES);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ADDMODALITIES).call(this));\n    _this.state = {\n      Modalities: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(ADDMODALITIES, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var Modalities;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.Modalities.get({\n                  all: true\n                });\n\n              case 3:\n                Modalities = _context.sent;\n                console.log(Modalities);\n                this.setState({\n                  Modalities: Modalities,\n                  loading: false\n                });\n                _context.next = 10;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      var initialValues = {\n        code: '',\n        name: '',\n        active: false\n      };\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"black\",\n        height: \"100\",\n        width: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"row tables-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Code\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Active\")), this.state.Modalities.length > 0 ? this.state.Modalities.map(function (modality, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, modality.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, modality.code), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, modality.name), modality.active ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, modality.active, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Activate\")) : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, modality.active, React.createElement(\"span\", {\n          className: \"active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Deactivate\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }) : React.createElement(\"tr\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"No Record Found\"))))), React.createElement(\"div\", {\n        className: \"col-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        enableReinitialize: true,\n        initialValues: initialValues,\n        onSubmit: function onSubmit(values) {\n          _this2.setState({\n            loading: true\n          });\n\n          API.Modalities.create({\n            data: values\n          }).then(function (response) {\n            if (response !== null) {\n              var Modalities = _toConsumableArray(_this2.state.Modalities);\n\n              Modalities.push(response);\n\n              _this2.setState({\n                Modalities: Modalities,\n                loading: false\n              });\n            }\n          }).catch(function (error) {\n            console.log(error);\n          });\n        },\n        render: function render(_ref) {\n          var values = _ref.values,\n              handleChange = _ref.handleChange,\n              handleSubmit = _ref.handleSubmit,\n              resetForm = _ref.resetForm;\n          return React.createElement(\"div\", {\n            className: \"form-wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            htmlFor: \"inputEmail4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Code\"), React.createElement(\"input\", {\n            name: \"code\",\n            value: values.code,\n            onChange: handleChange,\n            className: \"form-control\",\n            id: \"inputEmail4\",\n            placeholder: \"Short Code\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            htmlFor: \"inputPassword4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \"Name\"), React.createElement(\"input\", {\n            name: \"name\",\n            className: \"form-control\",\n            value: values.name,\n            onChange: handleChange,\n            id: \"inputPassword4\",\n            placeholder: \"Modality name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"row country-code\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group col-md-6 mt-10\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"form-check-input\",\n            name: \"active\",\n            checked: values.active,\n            value: values.active,\n            onChange: handleChange,\n            type: \"checkbox\",\n            id: \"gridCheck\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"gridCheck\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"Active?\")))), React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"button-wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"btn btn-clear\",\n            onClick: function onClick() {\n              return resetForm(initialValues);\n            },\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Clear\"), React.createElement(\"button\", {\n            className: \"btn  btn-add\",\n            disabled: values.code === \"\" || values.name === \"\" || values.country === \"\",\n            onClick: handleSubmit,\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \"Add\"))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ADDMODALITIES;\n}(Component);\n\nexport default ADDMODALITIES;","map":{"version":3,"sources":["/home/dev/Cloudtek/fullStackProj/front-end/src/Component/AdminModules/AddModalities/AddModalities.js"],"names":["React","Component","API","Formik","Loader","ADDMODALITIES","state","Modalities","loading","get","all","console","log","setState","initialValues","code","name","active","length","map","modality","index","id","values","create","data","then","response","push","catch","error","handleChange","handleSubmit","resetForm","country"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEMC,a;;;;;AACF,2BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAFU;AAMb;;;;;;;;;;;;;;;uBAGgCN,GAAG,CAACK,UAAJ,CAAeE,GAAf,CAAmB;AAAEC,kBAAAA,GAAG,EAAE;AAAP,iBAAnB,C;;;AAAnBH,gBAAAA,U;AACNI,gBAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,qBAAKM,QAAL,CAAc;AAAEN,kBAAAA,UAAU,EAAVA,UAAF;AAAcC,kBAAAA,OAAO,EAAE;AAAvB,iBAAd;;;;;;;;;;;;;;;;;;;;;;;;6BAOC;AAAA;;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,UAAMQ,aAAa,GAAG;AAClBC,QAAAA,IAAI,EAAE,EADY;AAElBC,QAAAA,IAAI,EAAE,EAFY;AAGlBC,QAAAA,MAAM,EAAE;AAHU,OAAtB;AAKA,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKX,KAAL,CAAWE,OAAX,GACG;AACI,QAAA,SAAS,EAAC,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAyB,QAAA,KAAK,EAAC,OAA/B;AAAuC,QAAA,MAAM,EAAC,KAA9C;AAAoD,QAAA,KAAK,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADH,GAMK;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CAFJ,EAUQ,KAAKF,KAAL,CAAWC,UAAX,CAAsBW,MAAtB,GAA+B,CAA/B,GACI,KAAKZ,KAAL,CAAWC,UAAX,CAAsBY,GAAtB,CAA0B,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAC3C,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,QAAQ,CAACE,EAAd,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,QAAQ,CAACL,IAAd,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKK,QAAQ,CAACJ,IAAd,CAHG,EAIFI,QAAQ,CAACH,MAAT,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKG,QAAQ,CAACH,MAAd,EAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAArB,CAAlB,GAAoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKG,QAAQ,CAACH,MAAd,EAAqB;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAArB,CAJlE,EAMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANG,CAAP;AAQH,OATD,CADJ,GAYI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAtBZ,CADJ,CADJ,CADJ,CADF,EAmCE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,MAAD;AACI,QAAA,kBAAkB,EAAE,IADxB;AAEI,QAAA,aAAa,EAAEH,aAFnB;AAGI,QAAA,QAAQ,EAAE,kBAAAS,MAAM,EAAI;AAEhB,UAAA,MAAI,CAACV,QAAL,CAAc;AAAEL,YAAAA,OAAO,EAAE;AAAX,WAAd;;AACAN,UAAAA,GAAG,CAACK,UAAJ,CAAeiB,MAAf,CAAsB;AAAEC,YAAAA,IAAI,EAAEF;AAAR,WAAtB,EACKG,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,gBAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnB,kBAAIpB,UAAU,sBAAO,MAAI,CAACD,KAAL,CAAWC,UAAlB,CAAd;;AACAA,cAAAA,UAAU,CAACqB,IAAX,CAAgBD,QAAhB;;AACA,cAAA,MAAI,CAACd,QAAL,CAAc;AAAEN,gBAAAA,UAAU,EAAVA,UAAF;AAAcC,gBAAAA,OAAO,EAAE;AAAvB,eAAd;AACH;AACJ,WAPL,EAQKqB,KARL,CAQW,UAAAC,KAAK,EAAI;AACZnB,YAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH,WAVL;AAWH,SAjBL;AAkBI,QAAA,MAAM,EAAE;AAAA,cAAGP,MAAH,QAAGA,MAAH;AAAA,cAAWQ,YAAX,QAAWA,YAAX;AAAA,cAAyBC,YAAzB,QAAyBA,YAAzB;AAAA,cAAuCC,SAAvC,QAAuCA,SAAvC;AAAA,iBACJ;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEV,MAAM,CAACR,IAAjC;AAAuC,YAAA,QAAQ,EAAEgB,YAAjD;AAA+D,YAAA,SAAS,EAAC,cAAzE;AAAwF,YAAA,EAAE,EAAC,aAA3F;AAAyG,YAAA,WAAW,EAAC,YAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,EAKI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAO,YAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,cAA7B;AAA4C,YAAA,KAAK,EAAER,MAAM,CAACP,IAA1D;AAAgE,YAAA,QAAQ,EAAEe,YAA1E;AAAwF,YAAA,EAAE,EAAC,gBAA3F;AAA4G,YAAA,WAAW,EAAC,eAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CALJ,CADJ,EAWI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEI;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,IAAI,EAAC,QAAzC;AACI,YAAA,OAAO,EAAER,MAAM,CAACN,MADpB;AAEI,YAAA,KAAK,EAAEM,MAAM,CAACN,MAFlB;AAGI,YAAA,QAAQ,EAAEc,YAHd;AAII,YAAA,IAAI,EAAC,UAJT;AAIoB,YAAA,EAAE,EAAC,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,OAAO,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADJ,CAFJ,CAXJ,EA0BI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE;AAAA,qBAAME,SAAS,CAACnB,aAAD,CAAf;AAAA,aAA3C;AAA2E,YAAA,IAAI,EAAC,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,QAAQ,EAAES,MAAM,CAACR,IAAP,KAAgB,EAAhB,IAAsBQ,MAAM,CAACP,IAAP,KAAgB,EAAtC,IAA4CO,MAAM,CAACW,OAAP,KAAmB,EAA1G;AAA8G,YAAA,OAAO,EAAEF,YAAvH;AAAqI,YAAA,IAAI,EAAC,QAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CA1BJ,CADI;AAAA,SAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAnCF,CAPV,CADJ;AAwGH;;;;EAlIuB/B,S;;AAoI5B,eAAeI,aAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AddModalities.css\";\r\nimport { API } from \"../../../api/index\";\r\nimport { Formik } from \"formik\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass ADDMODALITIES extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Modalities: [],\r\n            loading: true\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            const Modalities = await API.Modalities.get({ all: true })\r\n            console.log(Modalities)\r\n            this.setState({ Modalities, loading: false })\r\n\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        const initialValues = {\r\n            code: '',\r\n            name: '',\r\n            active: false\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.loading ?\r\n                    <div\r\n                        className=\"loader\"\r\n                    >\r\n                        <Loader type=\"ThreeDots\" color=\"black\" height=\"100\" width=\"100\" />\r\n                    </div>\r\n                    : <div className=\"row tables-row\">\r\n                        <div className=\"col-md-7\">\r\n                            <div className=\"table-wrap\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Code</th>\r\n                                            <th>Name</th>\r\n                                            <th>Active</th>\r\n                                        </tr>\r\n\r\n                                        {\r\n                                            this.state.Modalities.length > 0 ?\r\n                                                this.state.Modalities.map((modality, index) => {\r\n                                                    return <tr key={index}>\r\n                                                        <td>{modality.id}</td>\r\n                                                        <td>{modality.code}</td>\r\n                                                        <td>{modality.name}</td>\r\n                                                        {modality.active ? <td>{modality.active}<span>Activate</span></td> : <td>{modality.active}<span className=\"active\">Deactivate</span></td>}\r\n\r\n                                                        <td>{}</td>\r\n                                                    </tr>\r\n                                                })\r\n                                                :\r\n                                                <tr colSpan=\"8\" className=\"text-center\">\r\n                                                    No Record Found\r\n                                                </tr>\r\n                                        }\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n\r\n                            <Formik\r\n                                enableReinitialize={true}\r\n                                initialValues={initialValues}\r\n                                onSubmit={values => {\r\n\r\n                                    this.setState({ loading: true })\r\n                                    API.Modalities.create({ data: values })\r\n                                        .then(response => {\r\n                                            if (response !== null) {\r\n                                                let Modalities = [...this.state.Modalities]\r\n                                                Modalities.push(response)\r\n                                                this.setState({ Modalities, loading: false });\r\n                                            }\r\n                                        })\r\n                                        .catch(error => {\r\n                                            console.log(error);\r\n                                        });\r\n                                }}\r\n                                render={({ values, handleChange, handleSubmit, resetForm }) => (\r\n                                    <div className=\"form-wrap\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group col-md-6\">\r\n                                                <label htmlFor=\"inputEmail4\">Code</label>\r\n                                                <input name=\"code\" value={values.code} onChange={handleChange} className=\"form-control\" id=\"inputEmail4\" placeholder=\"Short Code\" />\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-6\">\r\n                                                <label htmlFor=\"inputPassword4\">Name</label>\r\n                                                <input name=\"name\" className=\"form-control\" value={values.name} onChange={handleChange} id=\"inputPassword4\" placeholder=\"Modality name\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row country-code\">\r\n                                         \r\n                                            <div className=\"form-group col-md-6 mt-10\">\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" name=\"active\"\r\n                                                        checked={values.active}\r\n                                                        value={values.active}\r\n                                                        onChange={handleChange}\r\n                                                        type=\"checkbox\" id=\"gridCheck\" />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"gridCheck\">\r\n                                                        Active?\r\n                                        </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"button-wrap\">\r\n                                                <button className=\"btn btn-clear\" onClick={() => resetForm(initialValues)} type=\"submit\">Clear</button>\r\n                                                <button className=\"btn  btn-add\" disabled={values.code === \"\" || values.name === \"\" || values.country === \"\"} onClick={handleSubmit} type=\"submit\">Add</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ADDMODALITIES;\r\n"]},"metadata":{},"sourceType":"module"}