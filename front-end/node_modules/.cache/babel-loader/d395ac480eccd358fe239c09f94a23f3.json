{"ast":null,"code":"import _regeneratorRuntime from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Cloudtek/fullStackProj/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Cloudtek/fullStackProj/front-end/src/Component/AdminModules/AddModalities/AddModalities.js\";\nimport React, { Component } from \"react\";\nimport \"./AddModalities.css\";\nimport { API } from \"../../../api/index\";\nimport { Formik } from \"formik\";\nimport Loader from \"react-loader-spinner\";\nimport axios from 'axios';\n\nvar ADDMODALITIES =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ADDMODALITIES, _Component);\n\n  function ADDMODALITIES() {\n    var _this;\n\n    _classCallCheck(this, ADDMODALITIES);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ADDMODALITIES).call(this));\n    _this.state = {\n      Modalities: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(ADDMODALITIES, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  axios.get('http://localhost:3001/orders/getAllOrders').then(function (response) {\n                    var Modalities = response.data;\n                    console.log('Modalities', Modalities);\n\n                    _this2.setState({\n                      Modalities: Modalities,\n                      loading: false\n                    });\n\n                    console.log('response', response);\n                  }).catch(function (error) {\n                    console.log(error);\n                  }); // const Modalities = await API.Modalities.get({ all: true })\n                  // console.log(Modalities)\n                  // this.setState({ Modalities, loading: false })\n                } catch (err) {}\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      var initialValues = {\n        code: '',\n        name: '',\n        active: false\n      };\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"black\",\n        height: \"100\",\n        width: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"row tables-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"S.No\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"User Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Comments\")), this.state.Modalities.length > 0 ? this.state.Modalities.map(function (modality, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, index), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, modality.starRating), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, modality.email), modality.comment ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, modality.comment) : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Null\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      }) : React.createElement(\"tr\", {\n        colSpan: \"8\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"No Record Found\")))))));\n    }\n  }]);\n\n  return ADDMODALITIES;\n}(Component);\n\nexport default ADDMODALITIES;","map":{"version":3,"sources":["/home/dev/Cloudtek/fullStackProj/front-end/src/Component/AdminModules/AddModalities/AddModalities.js"],"names":["React","Component","API","Formik","Loader","axios","ADDMODALITIES","state","Modalities","loading","get","then","response","data","console","log","setState","catch","error","err","initialValues","code","name","active","length","map","modality","index","starRating","email","comment"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AddModalities.css\";\r\nimport { API } from \"../../../api/index\";\r\nimport { Formik } from \"formik\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport axios from 'axios';\r\n\r\nclass ADDMODALITIES extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Modalities: [],\r\n            loading: true\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            axios.get('http://localhost:3001/orders/getAllOrders')\r\n              .then((response) => {\r\n                  let Modalities = response.data;\r\n                  console.log('Modalities', Modalities);\r\n                this.setState({ Modalities, loading: false })\r\n                console.log('response',response);\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              })          \r\n            // const Modalities = await API.Modalities.get({ all: true })\r\n            // console.log(Modalities)\r\n            // this.setState({ Modalities, loading: false })\r\n\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        const initialValues = {\r\n            code: '',\r\n            name: '',\r\n            active: false\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.loading ?\r\n                    <div\r\n                        className=\"loader\"\r\n                    >\r\n                        <Loader type=\"ThreeDots\" color=\"black\" height=\"100\" width=\"100\" />\r\n                    </div>\r\n                    : <div className=\"row tables-row\">\r\n                        <div className=\"col-md-7\">\r\n                            <div className=\"table-wrap\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n\r\n                                        <tr>\r\n                                            <th>S.No</th>\r\n                                            <th>Rating</th>\r\n                                            <th>User Email</th>\r\n                                            <th>Comments</th>\r\n                                        </tr>\r\n\r\n                                        {\r\n                                            this.state.Modalities.length > 0 ?\r\n                                                this.state.Modalities.map((modality, index) => {\r\n                                                    return <tr key={index}>\r\n                                                        <td>{index}</td>\r\n                                                        <td>{modality.starRating}</td>\r\n                                                        <td>{modality.email}</td>\r\n                                                        {modality.comment ? <td>{modality.comment}</td> : <td>Null</td>}\r\n\r\n                                                        <td>{}</td>\r\n                                                    </tr>\r\n                                                })\r\n                                                :\r\n                                                <tr colSpan=\"8\" className=\"text-center\">\r\n                                                    No Record Found\r\n                                                </tr>\r\n                                        }\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ADDMODALITIES;\r\n"]},"metadata":{},"sourceType":"module"}