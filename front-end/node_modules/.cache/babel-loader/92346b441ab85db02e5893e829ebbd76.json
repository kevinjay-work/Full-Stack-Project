{"ast":null,"code":"import { API } from \"../../api/index\";\nvar localStorage = global.window.localStorage; // const baseURL = `http://secondlook-life-1969196284.us-east-1.elb.amazonaws.com`;\n\nexport var auth = {\n  login: function login(email, password) {\n    if (auth.loggedIn()) {\n      return Promise.resolve(true);\n    }\n\n    console.log(email, password);\n    return API._login({\n      email: email,\n      password: password\n    }).then(function (response, err) {\n      //store user details in local storage\n      localStorage.token = response.token;\n\n      if (response.message === 'user not found') {\n        return Promise.resolve(false);\n      }\n\n      return Promise.resolve(response);\n    }).catch(function (err) {\n      return Promise.resolve(false);\n    });\n  },\n  singnup: function singnup(email, password, selectedRole) {\n    return API._signup({\n      email: email,\n      password: password,\n      selectedRole: selectedRole\n    }).then(function (response, err) {\n      //store user details in local storage\n      localStorage.token = response.token;\n      return Promise.resolve(true);\n    }).catch(function (err) {\n      localStorage.token = 'this is token';\n      return Promise.resolve(true);\n    });\n  },\n  loggedIn: function loggedIn() {\n    return !!localStorage.token;\n  },\n  logout: function logout(history) {\n    localStorage.clear();\n    history.push('/login');\n  }\n};","map":{"version":3,"sources":["/home/dev/Cloudtek/fullStackProj/front-end/src/Component/Login/Auth.js"],"names":["API","localStorage","global","window","auth","login","email","password","loggedIn","Promise","resolve","console","log","_login","then","response","err","token","message","catch","singnup","selectedRole","_signup","logout","history","clear","push"],"mappings":"AAAA,SACIA,GADJ,QAEO,iBAFP;AAGA,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcF,YAAnC,C,CACA;;AAEA,OAAO,IAAMG,IAAI,GAAG;AAEhBC,EAAAA,KAFgB,iBAEVC,KAFU,EAEHC,QAFG,EAEO;AAEnB,QAAIH,IAAI,CAACI,QAAL,EAAJ,EAAqB;AACjB,aAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBC,QAAnB;AACA,WAAOP,GAAG,CAACa,MAAJ,CAAW;AACdP,MAAAA,KAAK,EAALA,KADc;AAEdC,MAAAA,QAAQ,EAARA;AAFc,KAAX,EAGJO,IAHI,CAGC,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAAE;AACzBf,MAAAA,YAAY,CAACgB,KAAb,GAAqBF,QAAQ,CAACE,KAA9B;;AACA,UAAGF,QAAQ,CAACG,OAAT,KAAqB,gBAAxB,EAAyC;AACrC,eAAOT,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACH;;AACD,aAAOD,OAAO,CAACC,OAAR,CAAgBK,QAAhB,CAAP;AACH,KATM,EASJI,KATI,CASE,UAAAH,GAAG,EAAI;AACZ,aAAOP,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACH,KAXM,CAAP;AAYH,GApBe;AAqBhBU,EAAAA,OArBgB,mBAqBRd,KArBQ,EAqBDC,QArBC,EAqBSc,YArBT,EAqBuB;AAEnC,WAAOrB,GAAG,CAACsB,OAAJ,CAAY;AACfhB,MAAAA,KAAK,EAALA,KADe;AAEfC,MAAAA,QAAQ,EAARA,QAFe;AAGfc,MAAAA,YAAY,EAAZA;AAHe,KAAZ,EAIJP,IAJI,CAIC,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAAE;AACzBf,MAAAA,YAAY,CAACgB,KAAb,GAAqBF,QAAQ,CAACE,KAA9B;AACA,aAAOR,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH,KAPM,EAOJS,KAPI,CAOE,UAAAH,GAAG,EAAI;AACZf,MAAAA,YAAY,CAACgB,KAAb,GAAqB,eAArB;AACA,aAAOR,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH,KAVM,CAAP;AAWH,GAlCe;AAmChBF,EAAAA,QAnCgB,sBAmCL;AACP,WAAO,CAAC,CAACP,YAAY,CAACgB,KAAtB;AACH,GArCe;AAuChBM,EAAAA,MAvCgB,kBAuCTC,OAvCS,EAuCA;AAEZvB,IAAAA,YAAY,CAACwB,KAAb;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,QAAb;AAEH;AA5Ce,CAAb","sourcesContent":["import {\n    API\n} from \"../../api/index\";\nconst localStorage = global.window.localStorage;\n// const baseURL = `http://secondlook-life-1969196284.us-east-1.elb.amazonaws.com`;\n\nexport const auth = {\n\n    login(email, password) {\n\n        if (auth.loggedIn()) {\n            return Promise.resolve(true);\n        }\n        console.log(email, password)\n        return API._login({\n            email,\n            password\n        }).then((response, err) => { //store user details in local storage\n            localStorage.token = response.token;\n            if(response.message === 'user not found'){\n                return Promise.resolve(false);\n            }\n            return Promise.resolve(response);\n        }).catch(err => {\n            return Promise.resolve(false);\n        })\n    },\n    singnup(email, password, selectedRole) {\n\n        return API._signup({\n            email,\n            password,\n            selectedRole\n        }).then((response, err) => { //store user details in local storage\n            localStorage.token = response.token;\n            return Promise.resolve(true);\n        }).catch(err => {\n            localStorage.token = 'this is token';\n            return Promise.resolve(true);\n        })\n    },\n    loggedIn() {\n        return !!localStorage.token;\n    },\n\n    logout(history) {\n\n        localStorage.clear();\n        history.push('/login');\n\n    },\n\n};"]},"metadata":{},"sourceType":"module"}